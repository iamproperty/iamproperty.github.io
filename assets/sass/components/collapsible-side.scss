@use '../_func' as *;
// Host
:host {
  --colour-border: #e9e9e9;
  --side-link-hover: var(--colour-canvas-2);
  grid-column: full-width;

  @include light-mode() {
    --side-link-hover: #eeeeee;
  }

  display: block;
  min-height: calc(100vh - var(--nav-height));
  padding-top: 0 !important;
  margin-inline: auto;
  width: 100%;
  overflow: hidden;
  position: relative;

  @include media-breakpoint-up(md) {
    max-height: calc(100vh - var(--nav-height));
    overflow: auto;
  }
}

.container {
  position: static;
  min-height: 100%;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
  padding-left: 0 !important;

  @include media-breakpoint-up(md) {
    padding-left: 5.25rem !important;
  }
}

// #region Side menu
.side-menu {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  min-height: calc(100vh - var(--nav-height));
  width: rem(30);
  height: calc(100% - var(--nav-height));
  background-color: var(--colour-canvas);
  transition: width 1s;

  &:before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    border-right: 2px solid var(--colour-border);
  }

  @include media-breakpoint-up(sm) {
    left: 0;
    width: rem(40);
  }

  @include media-breakpoint-up(md) {
    left: rem(84);
    margin-left: #{rem(-84)};
    position: fixed;
    top: var(--nav-height);

    &:not(.open).hover {
      width: rem(304);

      .btn[class*='fa-']:before {
        content: '\f023' !important;
      }
    }
  }

  .btn {
    display: var(--btn-display, block);
    position: absolute;
    top: rem(32);
    right: 0;
    margin-bottom: 0;
    margin-right: rem(-20);
    background-color: var(--colour-canvas-2);
    border: 2px solid var(--colour-border);
    z-index: 99;
    color: var(--colour-primary-theme);

    &[aria-expanded] {
      // Change icon
      &[class*='fa-']:before {
        content: '\f053' !important;
      }

      @include media-breakpoint-up(md) {
        opacity: 0;
      }
    }
  }

  &:is(:hover, :focus-within, :active) .btn {
    border: 2px solid var(--colour-border);
    color: var(--colour-primary-theme);

    @include media-breakpoint-up(md) {
      opacity: 1;
    }
  }

  &:is(.open) {
    width: calc(100% - var(--container-padding-x));

    @include media-breakpoint-up(sm) {
      width: rem(382);
    }
    @include media-breakpoint-up(md) {
      width: rem(304);
    }
  }

  // Content

  .side-menu-content {
    position: absolute;
    top: 0;
    right: 0;
    padding: rem(32) rem(40) 0 0;
    width: rem(351);
    opacity: 0;
    transition: opacity 1s;
    min-height: 100%;
    overflow: auto;
    max-height: 100%;

    .h3 {
      padding-left: rem(24);
    }

    @include media-breakpoint-up(sm) {
      .h3 {
        padding-left: rem(40);
      }

      width: rem(382);
    }
    @include media-breakpoint-up(md) {
      width: rem(304);

      .h3 {
        padding-left: var(--container-padding-x-md);
      }
    }
  }

  &:not(.hover):not(.open) .side-menu-content.closed {
    display: none;
  }

  &.open .side-menu-content {
    opacity: 1;
  }

  @include media-breakpoint-up(md) {
    &.hover .side-menu-content {
      opacity: 1;
    }
  }
}

// Links
::slotted(*[slot='menu']) {
  padding-left: rem(24);

  @include media-breakpoint-up(sm) {
    padding-left: rem(40);
  }

  @include media-breakpoint-up(md) {
    padding-left: var(--container-padding-x-md);
  }
}

::slotted(hr) {
  border-bottom: 2px solid var(--colour-border) !important;
  margin-right: rem(-40) !important;
}

::slotted(a[slot='menu']) {
  display: block;

  display: block !important;
  line-height: rem(20) !important;
  padding: rem(16) rem(40) rem(16) rem(24) !important;
  margin: 0 !important;
  flex-shrink: 0;
  font-size: 1rem !important;
  font-weight: normal !important;
  text-decoration: none;

  border-bottom: 2px solid var(--colour-border) !important;

  margin-right: rem(-40) !important;

  @include media-breakpoint-up(sm) {
    padding-left: rem(40) !important;
  }

  @include media-breakpoint-up(md) {
    padding-left: var(--container-padding-x-md) !important;
  }
  &:after {
    display: none;
  }

  border-right: 2px solid var(--colour-border) !important;
}

::slotted(a[slot='menu']:where(:hover, :focus, [aria-expanded])) {
  background-color: var(--side-link-hover) !important;
}

::slotted(a[slot='menu']:active) {
  background-color: var(--side-link-hover) !important;
  font-weight: bold !important;
}

::slotted(a[slot='menu'][aria-expanded]) {
  background-color: var(--side-link-hover) !important;
  font-weight: bold !important;
  margin-right: #{rem(-40)} !important;
  position: relative;

  border-right: 2px solid var(--colour-info) !important;

  &:before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    height: calc(100% + 4px);
    margin-top: -2px;
    width: 2px;
    border-right: 2px solid var(--colour-info);
    margin-right: -2px;

    @media (forced-colors: active) {
      border-right: 10px solid var(--colour-info);
    }
  }
}
// #endregion

// #region main content
.main-content {
  padding-top: rem(24);
  padding-left: rem(60);

  @include media-breakpoint-up(sm) {
    padding-left: rem(80);
  }

  @include media-breakpoint-up(md) {
    padding-top: rem(40) !important;
    padding-left: 0;
  }

  > span.h3 {
    padding-top: 0.75rem;

    border-bottom: 2px solid var(--colour-border);
    margin-bottom: rem(40) !important;

    @include media-breakpoint-up(md) {
      display: none;
    }
  }
}

::slotted(.main-content__title) {
  border-bottom: 2px solid var(--colour-border);
  margin-bottom: rem(40) !important;
  max-width: 100% !important;
  display: block;
}

@include media-breakpoint-up(md) {
  ::slotted(.main-content__title) {
    display: none;
  }
}

// #endregion

// #region Desktop open state
@include media-breakpoint-up(md) {
  .container:has(.side-menu.open) {
    padding-left: 2rem !important;
    margin-left: max(19rem, calc(50% - calc(var(--container-max-width) / 2)));
    margin-right: 0;
    max-width: min(var(--container-max-width), 100% - 19rem);
  }
}
// #endregion

@include media-breakpoint-up(md) {
  :host([open-always]) {
    --btn-display: none;
  }
}
