@use '../_func' as *;

$layers: 'true' !default;
$mobileOnly: 'false' !default;
$darkMode: 'true' !default;

@include layer('elements', $layers) {
  // #region reset
  a {
    color: var(--link-color);
    text-decoration: $link-decoration;

    &:hover {
      color: var(--link-hover-color);
      text-decoration: $link-hover-decoration;
    }
  }

  // And undo these styles for placeholder links/named anchors (without href).
  // It would be more straightforward to just use a[href] in previous block, but that
  // causes specificity issues in many other styles that are too complex to fix.
  // See https://github.com/twbs/bootstrap/issues/19402

  a:not([href]):not([class]) {
    &,
    &:hover {
      color: inherit;
      text-decoration: none;
    }
  }
  // #endregion

  // global
  a {
    color: var(--colour-link);

    &:is(:hover, :focus, .hover, :focus-within) {
      color: var(--colour-hover);
    }

    &:is(:active, .active) {
      color: var(--colour-active);
    }
  }

  a:where(:not(.btn):not(.brand):not(:has(.card)):not(:has(iam-card))),
  .link {
    background-color: transparent;
    text-decoration: none;
    display: inline-block;
    border: none;
    color: var(--colour-link);
    margin: 0 rem(24) rem(24) 0;
    padding: 0;
    font-size: rem(18);
    line-height: rem(24);
    min-height: rem(24);
    position: relative;
    font-weight: bold;

    &:not(.text-decoration-none) {
      &:after {
        position: absolute;
        content: '';
        top: 100%;
        left: 50%;
        height: 2px;
        width: 100%;
        transform: translate(-50%, 0);
        background: var(--colour-underline);
        transition: width 0.5s;
      }
    }

    [class*='fa-'] {
      margin-left: 0;
      margin-right: 0.5rem;
    }
    [class*='fa-']:not(:first-child) {
      margin-left: 0.5rem;
      margin-right: 0;
    }

    &:not([disabled]):is(:hover, :focus, .hover, :active, .active, :focus-within) {
      &:after {
        width: 60%;
      }
    }

    &[disabled] {
      opacity: 0.4;
      cursor: not-allowed;
    }
  }

  @include inline-text() {
    a:not(.btn) {
      min-height: none;
      display: inline;
      margin: 0;
      text-decoration: underline;
      text-underline-offset: 0.25rem;
      text-decoration-thickness: 0.125rem;
      font-size: inherit;

      &:after {
        display: none;
      }

      [class*='fa-'] {
        margin: 0;
        display: inline;
        --fa-display: inline;

        &:after {
          content: '\a0';
        }
      }

      &:not([disabled]):is(:hover, :focus, .hover, :focus-within) {
        color: var(--colour-hover);
        text-decoration: none;
      }

      &:not([disabled]):is(:active, .active) {
        color: var(--colour-active);
        text-decoration: none;
        filter: brightness(85%);
      }
    }
  }

  // #region Support card component
  :is(a, button, label):has(.card, iam-card) {
    border: none;
    background: none;
    padding: 0;
    display: flex;
    margin-bottom: 1.5rem;
    outline: none !important;
    text-decoration: none;

    &:before {
      display: none;
    }

    &:not([class*='col']) {
      margin: 0 0 rem(24) 0;
    }

    &:not(.d-inline-block):not([class*='col']) {
      width: 100%;
    }

    iam-card {
      width: 100%;
    }
  }

  // #endregion
}
