@use '../_func' as *;

:is(.badge, .tag) {
  font-size: rem(16);
  line-height: rem(26);
  border: none !important;
  //outline: 1px solid var(--colour-canvas);
  //outline-offset: -1px;
  margin: 0;
  display: inline-block;
  text-align: center;
  white-space: nowrap;
  max-width: fit-content;
  color: #262626;
  position: relative;
  background: var(--wider-colour, var(--wider-colour-1));
  margin-bottom: 1rem;

  &:has(+ :is(.badge, .tag)) {
    margin-right: rem(6);
  }

  &:empty {
    display: none;
  }

  &:is(.bg-primary, .bg-dark, .bg-danger) {
    color: #{$colour-inverted} !important;
  }
}

.badge {
  border-radius: rem(6);
  padding: 0 rem(8);

  &--rounded {
    border-radius: 1rem;
    min-width: 1.625rem;
    padding: 0;
  }
}

.tag {
  border-radius: rem(16);
  padding: 0 rem(16);

  &:after {
    content: '\2715';
    margin-left: 0.6em;
    font-weight: bold;
  }

  &:is(:hover, :focus, .hover, :focus-within, :focus-visible) {
    background: var(--wider-colour-hover, var(--wider-colour-1-hover));
  }

  &:is(:active, .active) {
    background: var(--wider-colour-active, var(--wider-colour-1-active));
  }

  &:has(input:disabled),
  &:disabled {
    background: var(--wider-colour-1) !important;
    color: #99adb1 !important;
  }
}

.tag.tag--not-set,
iam-multiselect:not(:defined) .tag,
.tag.tag--toggle {
  background: var(--colour-canvas);
  outline: 1px solid var(--colour-border);
}

.tag.tag--toggle {
  &:after {
    display: none;
  }

  &:is(:hover, :focus) {
    background: #eeeeee;
  }

  &:is(:active) {
    background: #e0e0e0;
  }

  &:has(input:checked),
  &.selected {
    background: #e9f9fd;
    outline: 1px solid #1ebee6;
  }
}

// Quick fix for badges in buttons
.btn :is(.badge, .tag) {
  position: relative;
  top: -1px;
}
